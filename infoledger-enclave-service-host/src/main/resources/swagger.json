{
  "swagger": "2.0",
  "info": {
    "description": "This is a InfoLedger Enclave Service Host server endpoints. You can find here which kinds of requests they require and which responses they returns. Enjoy)))",
    "version": "v1",
    "title": "InfoLedger Enclave Service Host Documentation Swagger API"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "enclave-service-host-aggregation-controller",
      "description": "Enclave Service Host Aggregation Controller"
    },
    {
      "name": "enclave-service-host-validation-controller",
      "description": "Enclave Service Host Validation Controller"
    }
  ],
  "paths": {
    "/v1/aggregate": {
      "post": {
        "tags": [
          "enclave-service-host-aggregation-controller"
        ],
        "summary": "POST Aggregate data from attachments",
        "description": "POST Aggregate data from attachments",
        "operationId": "aggregateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "POST Request Authorization header(firstly you should authenticate , then copy id token from auth response body and put it instead of 'id_token'in Authorization input)",
            "required": true,
            "type": "string",
            "default": "Bearer=id_token"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "POST Request Content type(needed value set as a default value, do not change)",
            "required": true,
            "type": "string",
            "default": "application/json"
          },
          {
            "in": "body",
            "name": "request",
            "description": "Required data for aggregation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfoLedgerAggregationRequest",
              "originalRef": "InfoLedgerAggregationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data from message attachments aggregated",
            "schema": {
              "$ref": "#/definitions/InfoLedgerAggregationResponse",
              "originalRef": "InfoLedgerAggregationResponse"
            }
          },
          "400": {
            "description": "Aggregation for message attachments failed",
            "schema": {
              "$ref": "#/definitions/InfoLedgerAggregationResponse",
              "originalRef": "InfoLedgerAggregationResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/validate": {
      "post": {
        "tags": [
          "enclave-service-host-validation-controller"
        ],
        "summary": "POST Validate data files from attachments",
        "description": "POST Validate data files attachments",
        "operationId": "validateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "POST Request Authorization header(firstly you should authenticate , then copy id token from auth response body and put it instead of 'id_token'in Authorization input)",
            "required": true,
            "type": "string",
            "default": "Bearer=id_token"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "POST Request Content type(needed value set as a default value, do not change)",
            "required": true,
            "type": "string",
            "default": "application/json"
          },
          {
            "in": "body",
            "name": "request",
            "description": "Required data for validation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfoLedgerValidationRequest",
              "originalRef": "InfoLedgerValidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data from message attachments validated successfully",
            "schema": {
              "$ref": "#/definitions/InfoLedgerValidationResponse",
              "originalRef": "InfoLedgerValidationResponse"
            }
          },
          "400": {
            "description": "Validation for message attachments failed",
            "schema": {
              "$ref": "#/definitions/InfoLedgerValidationResponse",
              "originalRef": "InfoLedgerValidationResponse"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "FileProcessingFailureReason": {
      "type": "object",
      "properties": {
        "failureReason": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      },
      "title": "FileProcessingFailureReason"
    },
    "FileS3Info": {
      "type": "object",
      "required": [
        "bucketName",
        "fileKey"
      ],
      "properties": {
        "fileKey": {
          "type": "string"
        },
        "bucketName": {
          "type": "string"
        }
      },
      "title": "FileS3Info"
    },
    "InfoLedgerAggregationRequest": {
      "type": "object",
      "required": [
        "attachmentFilesS3Infos",
        "fileResultS3Info",
        "kmsKeyArn"
      ],
      "properties": {
        "kmsKeyArn": {
          "type": "string"
        },
        "attachmentFilesS3Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileS3Info",
            "originalRef": "FileS3Info"
          }
        },
        "fileResultS3Info": {
          "$ref": "#/definitions/FileS3Info",
          "originalRef": "FileS3Info"
        }
      },
      "title": "InfoLedgerAggregationRequest"
    },
    "InfoLedgerAggregationResponse": {
      "type": "object",
      "properties": {
        "aggregatedFileInfo": {
          "$ref": "#/definitions/FileS3Info",
          "originalRef": "FileS3Info"
        },
        "aggregationFailures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileProcessingFailureReason",
            "originalRef": "FileProcessingFailureReason"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "OK",
            "FAILED"
          ]
        }
      },
      "title": "InfoLedgerAggregationResponse"
    },
    "InfoLedgerValidationRequest": {
      "type": "object",
      "required": [
        "attachmentFilesS3Infos",
        "kmsKeyArn"
      ],
      "properties": {
        "kmsKeyArn": {
          "type": "string"
        },
        "attachmentFilesS3Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileS3Info",
            "originalRef": "FileS3Info"
          }
        }
      },
      "title": "InfoLedgerValidationRequest"
    },
    "InfoLedgerValidationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "OK",
            "FAILED"
          ]
        },
        "validationFailures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileProcessingFailureReason",
            "originalRef": "FileProcessingFailureReason"
          }
        },
        "validationResultsPerFile": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ValidationResponse",
            "originalRef": "ValidationResponse"
          }
        }
      },
      "title": "InfoLedgerValidationResponse"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "ValidationFailures": {
      "type": "object",
      "title": "ValidationFailures",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ValidationResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "ok": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "OK",
            "FAILED"
          ]
        },
        "validationFailures": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "title": "ValidationResponse"
    }
  }
}